trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

# Stages always run sequentially if no DEPENDENCIES !!!
# Jobs run in parallel if no DEPENDENCIES
stages:
- stage: Build
  jobs:
  - job: FirstJob
    variables: # Job level variables.
      jobVar: myFirstJob
    steps:
    - bash: echo Build FirstJob
    # Configure at Azure devops -> Pipelines -> Select pipeline -> Variables
    - bash: echo $(PipelineLevelVariable)
    # Azure preconfigured variables
    # for ref search on Google: "Azure Devops predefined variables"
    - bash: echo $(Build.BuildNumber)
    # - bash: echo $(Build.BuildId)
    # - bash: echo $(Build.SourceBranchName)
    # - bash: echo $(Build.SourcesDirectory)
    # - bash: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory) # Content inside Default WDir
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    # - bash: java -version
    # - bash: node --version
    # - bash: python --version 
    # - bash: mvn -version 
    # - bash: ls -R $(Build.ArtifactStagingDirectory)
  - job: SecondJob
    steps:
    - bash: echo Build SecondJob
- stage: DevDeploy
  variables: # Stage level variables. Here we used it in a job below
    environment: Dev
  dependsOn: Build
  jobs:
  - job: DevDeployJob
    steps:
    - bash: echo DevDeployJob
    - bash: echo $(environment)DeployJob # Usage of Stage level variable
- stage: QADeploy
  dependsOn: Build
  jobs:
  - job: QADeployJob
    steps:
    - bash: echo QADeployJob
- stage: ProdDeploy
  dependsOn: 
  - DevDeploy
  - QADeploy
  jobs:
  - job: ProdDeployJob
    steps:
    - bash: echo ProdDeployJob
